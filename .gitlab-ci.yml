# SPDX-FileCopyrightText: 2023 - 2024 GESIS - Leibniz-Institut f√ºr Sozialwissenschaften
# SPDX-FileContributor: Raniere Gaia Costa da Silva <Raniere.CostadaSilva@gesis.org>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

variables:
  MYBINDER_URL: https://notebooks.gesis.org/binder

stages:
  - config
  - prepare
  - test
  - release
  - deploy-integration
  - deploy-acceptance
  - deploy-production

Assign Docker image tag:
  stage: config
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
      variables:
        DOCKER_IMAGE_TAG: $CI_COMMIT_TAG
        DOCKER_REGISTRY: docker-private-releases.gesis.intra/gesis
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
      variables:
        DOCKER_IMAGE_TAG: $CI_COMMIT_SHA
        DOCKER_REGISTRY: docker-private-snapshots.gesis.intra/gesis
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - Dockerfile
      variables:
        DOCKER_IMAGE_TAG: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
        DOCKER_REGISTRY: docker-private-snapshots.gesis.intra/gesis
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        DOCKER_IMAGE_TAG: latest
        DOCKER_REGISTRY: docker-private-snapshots.gesis.intra/gesis
  script:
    - rm -f docker.env
    - echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}" >> docker.env
    - echo "DOCKER_REGISTRY=${DOCKER_REGISTRY}" >> docker.env
  artifacts:
    reports:
      dotenv: docker.env

# Build documentation
include:
  - component: $CI_SERVER_FQDN/rse/docker/images/sphinx-doc/sphinx-doc@2.3.0
    inputs:
      stage: release
      dir: docs
    rules:
      - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
      - if: $CI_PIPELINE_SOURCE == "merge_request_event"
        changes:
          - docs/source/**/*

pages:
  stage: .post
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
  script:
    - mv docs/build/html public
  artifacts:
    paths:
      - public

.Build container:
  image: docker-private.gesis.intra/gesis/dc:5.7
  services:
    - name: docker-private.gesis.intra/gesis/dind:5.5
      alias: docker
  variables:
    DOCKER_TARGET: target
    DOCKER_CONTAINER_NAME: ${DOCKER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
  script:
    - |
      docker \
      build \
      --no-cache \
      --pull \
      --target ${DOCKER_TARGET} \
      --tag ${DOCKER_CONTAINER_NAME}:${DOCKER_IMAGE_TAG} \
      --tag ${DOCKER_CONTAINER_NAME}:latest \
      .
    - |
      if [ -z "$CI_COMMIT_TAG" ]
      then
      docker \
      push \
      --all-tags \
      ${DOCKER_CONTAINER_NAME}:${DOCKER_IMAGE_TAG}
      else
      docker \
      push \
      ${DOCKER_CONTAINER_NAME}
      fi

Build prod container:
  extends: .Build container
  stage: release
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
  variables:
    DOCKER_TARGET: prod
    DOCKER_CONTAINER_NAME: ${DOCKER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}

Verify code style:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - "**/*.py"
  image: python:3.12.6-alpine3.20
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
  before_script:
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - python -m pip install black
  script:
    - black .

Run test:
  tags:
    - shell
    - methodshub
    - stage
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - "**/*.py"
  variables:
    MAGDALENA_SHARED_DIR: /tmp/magdalena-shared-volume
  script:
    - poetry install --with dev
    - |
      poetry run pytest \
      --verbose \
      --showlocals \
      -o log_cli=true \
      -o log_cli_level=INFO \
      .

Release new version:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "running release_job"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'

.Deploy new version downstream:
  trigger:
    project: methods-hub/methodshub.gesis.org
    branch: main
    strategy: depend

Deploy new version downstream into integration environment:
  extends: .Deploy new version downstream
  stage: deploy-integration
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
  variables:
    UPSTREAM_PROJECT_NAMESPACE: $CI_PROJECT_NAMESPACE
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    TARGET_ENVIRONMENT: integration

Deploy new version downstream into acceptance environment:
  extends: .Deploy new version downstream
  stage: deploy-acceptance
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
  variables:
    UPSTREAM_PROJECT_NAMESPACE: $CI_PROJECT_NAMESPACE
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    TARGET_ENVIRONMENT: acceptance

Deploy new version downstream into production environment:
  extends: .Deploy new version downstream
  stage: deploy-production
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
      when: manual
  variables:
    UPSTREAM_PROJECT_NAMESPACE: $CI_PROJECT_NAMESPACE
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    TARGET_ENVIRONMENT: production

stages:
  - config
  - prepare
  - test
  - release
  - stage-deploy
  - production-deploy

Assign Docker image tag:
  stage: config
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
      variables:
        DOCKER_IMAGE_TAG: $CI_COMMIT_TAG
        DOCKER_REGISTRY: docker-private-releases.gesis.intra/gesis
    - if:  $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
      variables:
        DOCKER_IMAGE_TAG: latest
        DOCKER_REGISTRY: docker-private-snapshots.gesis.intra/gesis
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - Dockerfile
      variables:
        DOCKER_IMAGE_TAG: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
        DOCKER_REGISTRY: docker-private-snapshots.gesis.intra/gesis
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        DOCKER_IMAGE_TAG: latest
        DOCKER_REGISTRY: docker-private-snapshots.gesis.intra/gesis
  script:
    - rm -f docker.env
    - echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}" >> docker.env
    - echo "DOCKER_REGISTRY=${DOCKER_REGISTRY}" >> docker.env
  artifacts:
    reports:
      dotenv: docker.env

build documentation:
  image: docker-private-releases.gesis.intra/gesis/methods-hub/sphinx/sphinx
  stage: release
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - docs/source/**/*
  script:
    - cd docs
    - make html
  artifacts:
    paths:
      - docs/build

pages:
  stage: .post
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
  dependencies:
    - build documentation
  script:
    - mkdir -p public
    - mv docs/build/html/* public
  artifacts:
    paths:
      - public

.Build container:
  image: docker-private.gesis.intra/gesis/dc:5.7
  services:
    - name:  docker-private.gesis.intra/gesis/dind:5.5
      alias: docker
  variables:
    DOCKER_TARGET: target
    DOCKER_CONTAINER_NAME: ${DOCKER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/target
  script:
    - |
      docker \
      build \
      --no-cache \
      --pull \
      --target ${DOCKER_TARGET} \
      --tag ${DOCKER_CONTAINER_NAME}:${DOCKER_IMAGE_TAG} \
      --tag ${DOCKER_CONTAINER_NAME}:latest \
      .
    - |
      docker \
      push \
      --all-tags \
      ${DOCKER_CONTAINER_NAME}

Build dev container:
  extends: .Build container
  stage: prepare
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
      changes:
        - Dockerfile
        - pyproject.toml
        - poetry.lock
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Dockerfile
        - pyproject.toml
        - poetry.lock
  variables:
    DOCKER_TARGET: dev
    DOCKER_CONTAINER_NAME: ${DOCKER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/dev

Build prod container:
  extends: .Build container
  stage: release
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
  variables:
    DOCKER_TARGET: prod
    DOCKER_CONTAINER_NAME: ${DOCKER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/prod

Verify code style:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - '**/*.py'
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
  image: ${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/dev:${DOCKER_IMAGE_TAG}
  script:
    - black .

Run test:
  tags:
    - shell
    - methodshub
    - stage
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - '**/*.py'
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'
  variables:
    MAGDALENA_SHARED_DIR: /tmp/magdalena-shared-volume
  script:
    - poetry install --with dev
    - poetry run pytest .

.Deploy new version downstream:
  trigger:
    project: methods-hub/methodshub.gesis.org
    branch: main
    strategy: depend
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'

Deploy stage new version downstream:
  extends: .Deploy new version downstream
  stage: stage-deploy
  variables:
    UPSTREAM_PROJECT_NAMESPACE: $CI_PROJECT_NAMESPACE
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    TARGET_ENVIRONMENT: stage

Deploy production new version downstream:
  extends: .Deploy new version downstream
  stage: production-deploy
  variables:
    UPSTREAM_PROJECT_NAMESPACE: $CI_PROJECT_NAMESPACE
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    TARGET_ENVIRONMENT: production
